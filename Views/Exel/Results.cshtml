@model Dictionary<string, (decimal TotalAmount, List<Payment>)>
@{ ViewData["Title"] = "Payment Expenditures"; }

<h2>@ViewData["Title"]</h2>

@if (Model == null || !Model.Any())
{
    <p>No data was found in the uploaded Excel file. Please upload a valid file with data.</p>
}else{
  <ul class="nav nav-tabs" id="paymentTab" role="tablist">
      @foreach (var mode in Model)
      {
          var cleanKey = mode.Key.Replace(" ", "-").ToLower();
           <li class="nav-item" style="cursor: pointer;" role="presentation">
              <a class="nav-link @(Model.Keys.First() == mode.Key ? "active" : "")"
                 id="@cleanKey-tab" data-bs-toggle="tab" data-bs-target="#@cleanKey" role="tab"
                 aria-controls="@cleanKey" aria-selected="@(Model.Keys.First() == mode.Key ? "true" : "false")">
                  @mode.Key
              </a>
          </li>
      }
  </ul>
  
  <div class="tab-content" id="paymentTabContent">
      @foreach (var mode in Model)
      {
          var cleanKey = mode.Key.Replace(" ", "-").ToLower();
           <div class="tab-pane fade @(Model.Keys.First() == mode.Key ? "show active" : "")"
               id="@cleanKey" role="tabpanel" aria-labelledby="@cleanKey-tab">
              
              <h4>Total Amount: @mode.Value.TotalAmount</h4>
              <table class="table">
                  <thead>
                      <tr>
                          <th>Name</th>
                          <th>Phone Number</th>
                          <th>Amount</th>
                      </tr>
                  </thead>
                  <tbody>
                      @foreach (var payment in mode.Value.Item2)
                      {
                        <tr>
                            <td>@payment.Name</td>
                            <td>@payment.PhoneNumber</td>
                            <td>@payment.Amount</td>
                        </tr>
                      }
                  </tbody>
              </table>
          </div>
      }
  </div>
}
